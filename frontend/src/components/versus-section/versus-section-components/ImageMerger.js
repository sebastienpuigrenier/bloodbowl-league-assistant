import React from 'react';
import mergeImages from 'merge-images';
import { FaDownload } from 'react-icons/fa';
import { Canvg } from 'canvg';
import html2canvas from 'html2canvas';

const ImageMerger = ({
                         couleurFond1,
                         couleurFond2,
                         joueur1Image,
                         joueur2Image
                     }) => {
    const convertSvgToPng = async (svgString, width, height) => {
        const canvas = document.createElement('canvas');
        canvas.width = width;
        canvas.height = height;
        const ctx = canvas.getContext('2d');
        const v = Canvg.fromString(ctx, svgString);
        await v.render();
        return canvas.toDataURL('image/png');
    };

    const mergeAllImages = async () => {
        const resizeImage = (src, width) => {
            return new Promise((resolve, reject) => {
                const img = new Image();
                img.src = src;
                img.onload = () => {
                    const aspectRatio = img.height / img.width;
                    const height = width * aspectRatio;
                    const canvas = document.createElement('canvas');
                    canvas.width = width;
                    canvas.height = height;
                    const ctx = canvas.getContext('2d');
                    ctx.drawImage(img, 0, 0, width, height);
                    resolve(canvas.toDataURL());
                };
                img.onerror = (err) => reject(err);
            });
        };

        const svgString1 = `
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 3000 800" preserveAspectRatio="xMidYMid meet">
                <g transform="translate(0,800) scale(0.1,-0.1)" fill="${couleurFond1}" stroke="none" opacity="0.52">
                    <path d="M468 7841 c-145 -47 -269 -174 -312 -320 -14 -49 -16 -386 -16 -3521
                    0 -3135 2 -3472 16 -3521 43 -148 168 -274 315 -320 59 -19 163 -19 4042 -19
                    2190 0 3987 4 3993 8 6 4 17 23 24 42 7 21 32 51 61 74 27 22 49 45 49 52 0 7
                    6 17 13 21 7 4 30 37 52 71 42 67 161 202 177 202 6 0 27 13 47 28 20 15 49
                    34 65 42 16 8 31 23 34 33 2 9 15 20 28 23 13 3 24 10 24 15 0 5 6 9 13 9 6 0
                    30 14 51 30 22 17 45 30 53 30 7 0 33 16 59 35 25 19 56 35 69 35 13 0 35 11
                    49 25 16 16 36 25 55 25 20 0 34 7 41 20 6 11 20 20 31 20 12 0 40 20 65 45
                    24 25 48 45 54 45 5 0 26 18 46 40 20 22 41 40 46 40 5 0 32 25 61 55 28 30
                    54 55 59 55 4 0 28 20 53 44 25 25 62 51 83 58 20 6 42 17 47 23 16 18 66 33
                    128 40 31 4 57 11 57 16 0 5 20 14 45 20 24 6 50 17 56 25 6 8 17 14 24 14 7
                    0 18 7 25 15 7 8 25 15 40 15 16 0 30 6 33 13 3 9 54 11 223 9 248 -3 443 18
                    451 48 5 18 45 40 108 60 22 7 49 20 60 30 11 10 30 21 43 25 12 3 22 14 22
                    25 0 12 10 21 30 25 17 4 30 11 30 16 0 5 11 14 25 19 14 5 25 17 25 28 0 12
                    16 26 50 41 27 12 50 29 50 37 0 8 5 14 10 14 6 0 10 6 10 14 0 15 114 76 142
                    76 14 0 50 26 100 73 10 10 32 20 49 24 17 3 33 12 36 19 3 8 13 14 23 14 10
                    0 23 7 30 15 7 8 23 15 36 15 13 0 24 4 24 9 0 5 15 15 34 21 44 14 79 47 104
                    97 28 54 88 111 141 134 24 11 99 38 165 60 149 51 201 85 241 160 8 15 21 29
                    30 33 18 7 130 -15 162 -32 14 -8 86 -12 212 -12 175 0 191 1 191 18 0 11 390
                    306 1142 862 1360 1008 1526 1131 1815 1357 122 95 228 173 235 173 8 0 77 47
                    155 104 140 104 169 121 253 149 25 9 65 23 90 32 51 19 160 14 214 -9 71 -32
                    115 -44 178 -50 61 -7 68 -6 80 13 7 12 17 21 21 21 5 0 28 15 50 33 40 31 81
                    51 143 66 44 12 144 62 144 72 0 5 5 9 10 9 6 0 37 26 70 58 32 32 78 68 102
                    80 24 13 61 34 83 47 22 14 54 32 72 41 17 8 34 22 37 30 3 8 11 14 18 14 29
                    0 285 158 345 213 26 23 52 39 111 67 l44 20 38 -30 c21 -16 45 -30 53 -30 8
                    0 24 20 36 45 25 52 44 76 161 198 123 128 223 201 297 216 108 23 272 -7 328
                    -60 l30 -29 120 16 c124 16 250 47 261 65 3 6 16 14 27 20 23 9 36 17 104 62
                    23 15 44 27 47 27 24 0 245 119 291 157 6 5 38 30 72 56 34 26 68 54 76 62 8
                    7 36 28 63 44 53 34 184 158 184 175 0 15 420 426 435 426 7 0 20 9 29 19 10
                    11 33 27 51 36 19 8 47 26 62 39 15 13 42 31 60 40 18 9 57 33 86 54 30 21
                    125 66 211 101 95 39 156 69 156 77 0 12 -1629 14 -10722 13 -10372 0 -10725
                    -1 -10780 -18z"/>
                </g>
            </svg>
        `;

        const svgString2 = `
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 3000 800" preserveAspectRatio="xMidYMid meet">
                <g transform="translate(0,800) scale(0.1,-0.1)" fill="${couleurFond2}" stroke="none" opacity="0.52">
                    <path d="M21925 7833 c-22 -7 -58 -22 -80 -33 -22 -10 -77 -34 -122 -54 -74
                    -32 -180 -94 -253 -147 -14 -10 -50 -32 -80 -50 -68 -39 -85 -53 -174 -135
                    -112 -104 -176 -168 -176 -176 0 -5 -5 -8 -10 -8 -6 0 -25 -17 -43 -37 -18
                    -21 -51 -55 -74 -77 -24 -21 -43 -43 -43 -49 0 -5 -12 -21 -27 -36 -16 -15
                    -35 -36 -44 -47 -19 -22 -34 -34 -109 -89 -30 -22 -61 -46 -69 -53 -8 -7 -26
                    -21 -40 -30 -14 -9 -30 -22 -34 -29 -4 -7 -12 -13 -18 -13 -5 0 -20 -10 -32
                    -23 -12 -13 -37 -29 -54 -36 -18 -8 -33 -17 -33 -22 0 -5 -65 -41 -145 -80
                    -80 -40 -148 -76 -151 -81 -3 -5 -16 -13 -27 -19 -21 -9 -36 -17 -87 -50 -40
                    -26 -130 -48 -245 -60 l-106 -12 -28 27 c-15 14 -37 26 -48 26 -12 0 -25 5
                    -28 10 -3 6 -22 10 -41 10 -19 0 -34 5 -34 10 0 13 -151 13 -210 -1 -66 -15
                    -151 -76 -292 -211 -10 -10 -18 -21 -18 -25 0 -5 -14 -17 -30 -28 -16 -11 -30
                    -25 -30 -30 0 -6 -15 -26 -33 -45 -18 -19 -41 -54 -51 -77 l-19 -42 -37 29
                    c-21 17 -45 30 -54 30 -27 0 -121 -46 -157 -77 -18 -16 -63 -49 -99 -73 -36
                    -24 -84 -56 -107 -72 -23 -16 -72 -42 -108 -59 -36 -17 -65 -34 -65 -39 0 -4
                    -8 -10 -17 -14 -10 -3 -40 -19 -68 -36 -27 -16 -62 -35 -77 -41 -16 -6 -28
                    -14 -28 -19 0 -4 -12 -13 -28 -19 -15 -6 -42 -29 -61 -51 -19 -22 -40 -40 -47
                    -40 -8 0 -14 -7 -14 -15 0 -8 -7 -15 -15 -15 -8 0 -15 -4 -15 -10 0 -5 -7 -10
                    -15 -10 -8 0 -15 -4 -15 -10 0 -5 -9 -10 -19 -10 -11 0 -21 -4 -23 -8 -1 -5
                    -41 -20 -87 -35 -53 -17 -99 -40 -127 -62 -23 -19 -46 -35 -51 -35 -5 0 -15
                    -9 -23 -20 -12 -17 -22 -19 -65 -14 -51 6 -114 24 -175 52 -23 10 -66 16 -125
                    16 -76 1 -100 -3 -157 -26 -86 -36 -116 -37 -65 -3 20 14 37 28 37 30 0 3 -14
                    5 -31 5 -24 0 -32 -6 -40 -27 -7 -19 -60 -65 -170 -145 -87 -65 -166 -118
                    -173 -118 -8 0 -132 -92 -276 -205 -145 -112 -865 -651 -1602 -1197 -737 -546
                    -1335 -994 -1329 -996 6 -2 11 -8 11 -13 0 -16 -344 -11 -387 5 -56 22 -150
                    38 -173 31 -11 -4 -27 -19 -35 -34 -37 -72 -120 -127 -227 -151 -32 -7 -58
                    -17 -58 -21 0 -4 -25 -13 -55 -20 -30 -7 -55 -15 -55 -20 0 -4 -10 -9 -23 -13
                    -31 -7 -108 -84 -132 -132 -25 -47 -50 -74 -70 -74 -8 0 -15 -4 -15 -9 0 -5
                    -11 -12 -25 -15 -14 -4 -25 -11 -25 -16 0 -6 -11 -10 -24 -10 -13 0 -29 -7
                    -36 -15 -7 -8 -20 -15 -30 -15 -10 0 -20 -6 -23 -14 -3 -7 -20 -16 -38 -20
                    -18 -3 -40 -13 -48 -20 -9 -8 -29 -26 -44 -40 -15 -14 -40 -29 -55 -32 -55
                    -12 -141 -59 -142 -76 0 -10 -4 -18 -10 -18 -5 0 -10 -6 -10 -12 0 -7 -23 -24
                    -50 -37 -32 -16 -50 -32 -52 -45 -2 -13 -12 -22 -25 -24 -13 -2 -23 -9 -23
                    -17 0 -7 -14 -16 -30 -20 -20 -4 -30 -13 -30 -25 0 -10 -12 -23 -27 -29 -16
                    -7 -46 -22 -68 -36 -22 -13 -52 -24 -67 -24 -16 -1 -28 -5 -28 -10 0 -5 -9
                    -12 -19 -16 -11 -3 -23 -15 -26 -26 -5 -13 -16 -19 -38 -19 -18 0 -50 -5 -72
                    -12 -24 -6 -145 -11 -299 -12 -198 -1 -260 -4 -263 -13 -3 -7 -17 -13 -31 -14
                    -15 0 -40 -9 -57 -19 -39 -25 -84 -47 -112 -55 -13 -3 -23 -10 -23 -15 0 -5
                    -26 -11 -57 -15 -66 -7 -115 -23 -125 -41 -4 -6 -24 -15 -44 -19 -25 -4 -52
                    -22 -86 -56 -27 -27 -52 -49 -56 -49 -4 0 -20 -14 -35 -30 -16 -17 -33 -30
                    -38 -30 -5 0 -14 -11 -19 -25 -5 -14 -16 -25 -24 -25 -7 0 -29 -17 -48 -38
                    -19 -21 -48 -44 -64 -50 -16 -7 -37 -26 -46 -42 -11 -20 -28 -33 -48 -37 -18
                    -3 -37 -14 -43 -24 -7 -12 -24 -19 -42 -19 -32 -1 -65 -20 -65 -39 0 -6 -15
                    -11 -34 -11 -18 0 -39 -7 -46 -15 -7 -8 -18 -15 -26 -15 -7 0 -19 -8 -26 -18
                    -7 -10 -26 -22 -43 -26 -16 -4 -40 -18 -53 -32 -14 -13 -31 -24 -38 -24 -8 0
                    -14 -4 -14 -10 0 -5 -9 -10 -20 -10 -10 0 -25 -10 -31 -22 -15 -28 -39 -47
                    -59 -48 -9 0 -30 -14 -48 -30 -18 -17 -37 -30 -41 -30 -14 0 -151 -149 -151
                    -165 0 -9 -7 -18 -16 -22 -8 -3 -22 -23 -31 -44 -8 -22 -21 -39 -28 -39 -8 0
                    -15 -10 -17 -22 -2 -12 -13 -28 -26 -34 -41 -20 -92 -86 -92 -119 0 -7 -6 -16
                    -12 -18 -7 -3 4706 -6 10474 -6 10265 -1 10488 -1 10547 18 147 46 272 172
                    315 320 14 49 16 385 16 3512 0 3365 -1 3459 -19 3518 -46 147 -172 272 -320
                    315 -49 14 -402 16 -3703 16 l-3649 0 -9 -22 -9 -23 0 23 c-1 21 -4 22 -88 21
                    -49 -1 -106 -8 -128 -16z"/>
                </g>
            </svg>
        `;

        const svgWidth = 3000;
        const svgHeight = 800;

        const png1 = await convertSvgToPng(svgString1, svgWidth, svgHeight);
        const png2 = await convertSvgToPng(svgString2, svgWidth, svgHeight);

        const images = [
            { src: `${process.env.PUBLIC_URL}/versusImg/versusFond.png`, x: 0, y: 0, zIndex: 1 },
            { src: `${process.env.PUBLIC_URL}/versusImg/pattern.png`, x: 0, y: 0, zIndex: 2 },
            { src: png1, x: 0, y: 2, zIndex: 3 },
            { src: png2, x: 0, y: 2, zIndex: 4 },
            { src: `${process.env.PUBLIC_URL}/versusImg/vs.png`, x: 0, y: 0, zIndex: 5 },
            { src: `${process.env.PUBLIC_URL}/versusImg/bordure.png`, x: 0, y: 0, zIndex: 6 },
        ];

        if (joueur1Image) {
            const resizedJoueur1Image = await resizeImage(joueur1Image, 520); // Adjust width and height as necessary
            images.push({ src: resizedJoueur1Image, x: 300, y: 110, zIndex: 7 }); // Adjust x and y as necessary
        }
        if (joueur2Image) {
            const resizedJoueur2Image = await resizeImage(joueur2Image, 520); // Adjust width and height as necessary
            images.push({ src: resizedJoueur2Image, x: 2220, y: 275, zIndex: 8 }); // Adjust x and y as necessary
        }

        mergeImages(images)
            .then(b64 => {
                const link = document.createElement('a');
                link.href = b64;
                link.download = 'merged-image.png';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            })
            .catch(err => console.error('Error merging images:', err));
    };

    return (
        <div>
            <button className="lined thin" onClick={mergeAllImages}><FaDownload /> Télécharger image</button>
        </div>
    );
};

export default ImageMerger;
